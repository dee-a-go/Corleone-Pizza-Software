<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_senha.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>